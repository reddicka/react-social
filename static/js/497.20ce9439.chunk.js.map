{"version":3,"file":"static/js/497.20ce9439.chunk.js","mappings":"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","sources":["webpack://react-piska/./src/components/Dialogs/DialogsPage.module.css?b229","webpack://react-piska/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.jsx","webpack://react-piska/./src/components/Dialogs/MessageItem/MessageItem.module.css?481d","components/Dialogs/MessageItem/MessageItem.jsx","components/Dialogs/NewMessage.jsx","components/Dialogs/DialogsPage.jsx","components/Dialogs/DialogsPageContainer.jsx","components/common/FormsControls/FormsControls.jsx","hoc/WithAuthRedirect.jsx","utils/validators/validators.jsx","webpack://react-piska/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialog_page\":\"DialogsPage_dialog_page__ojeaP\",\"dialogs_list\":\"DialogsPage_dialogs_list__-zkA2\",\"dialogs_item\":\"DialogsPage_dialogs_item__qjhbu\",\"dialog_active\":\"DialogsPage_dialog_active__10S+U\",\"messages_list\":\"DialogsPage_messages_list__DT0wc\",\"message_item\":\"DialogsPage_message_item__1R1z+\",\"inbox\":\"DialogsPage_inbox__vte2+\",\"outbox\":\"DialogsPage_outbox__Yo8hR\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialogs_item\":\"DialogItem_dialogs_item__Co73a\",\"dialog_active\":\"DialogItem_dialog_active__jMckx\"};","import styles from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction DialogItem(props) {\r\n    return (\r\n        <li className={styles.dialogs_item}>\r\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default DialogItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"message_item\":\"MessageItem_message_item__Lh1NT\",\"inbox\":\"MessageItem_inbox__csd33\",\"outbox\":\"MessageItem_outbox__bBy2r\"};","import styles from './MessageItem.module.css';\r\n\r\nfunction MessageItem(props) {\r\n    return (\r\n        <div className={styles.message_item + ' ' + styles[props.type]}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default MessageItem;\r\n","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {FormControl} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLength, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLengthNum =  maxLength(10)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <label htmlFor=\"messageBody\"></label>\r\n                <Field\r\n                    component={FormControl}\r\n                    formElement='textarea'\r\n\r\n                    name=\"messageBody\"\r\n                    id=\"messageBody\"\r\n                    placeholder=\"Введите сообщение...\"\r\n                    validate={[required, maxLengthNum]}\r\n                />\r\n                <button>Отправить</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nconst AddMessage = (props) => {\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.messageBody)\r\n    }\r\n\r\n    return <AddMessageFormRedux onSubmit={addNewMessage} />\r\n}\r\n\r\nexport default AddMessage","import React from \"react\";\r\nimport styles from './DialogsPage.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport MessageItem from \"./MessageItem/MessageItem\";\r\nimport AddMessage from \"./NewMessage\";\r\n\r\nfunction DialogsPage(props) {\r\n    let state = props.dialogsPageData\r\n\r\n    let dialogsList = state.dialogs.map(dialog =>\r\n        <DialogItem id={dialog.id} name={dialog.name} key={dialog.id} />\r\n    )\r\n\r\n    let messagesList = state.messages.map(message =>\r\n        <MessageItem message={message.message} type={message.type} key={message.id} />\r\n    )\r\n\r\n    return (\r\n        <div className={styles.dialog_page}>\r\n            <div className={styles.dialogs_list}>\r\n                <ul>\r\n                    { dialogsList }\r\n                </ul>\r\n            </div>\r\n\r\n            <div>\r\n                <div className={styles.messages_list}>\r\n                    { messagesList }\r\n                </div>\r\n\r\n                <AddMessage sendMessage={props.sendMessage} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogsPage;\r\n","import {setNewMessage} from \"../../redux/dialogs-reducer\";\r\nimport DialogsPage from \"./DialogsPage\";\r\nimport {connect} from \"react-redux\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    dialogsPageData: state.dialogsPage,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        sendMessage: setNewMessage,\r\n    }),\r\n    WithAuthRedirect\r\n)(DialogsPage)","import React from \"react\";\r\nimport styles from './FormsControls.module.css'\r\n\r\nexport const FormControl = ({input, meta, formElement, ...props}) => {\r\n    let hasError = meta.touched && meta.error\r\n\r\n    return (\r\n    <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n        {React.createElement(formElement, {...input, ...props})}\r\n        {hasError && <p>{meta.error}</p>}\r\n    </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) {\r\n                return <Navigate to={'/login'} />\r\n            }\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}\r\n","export const required = (value) => {\r\n    if (value) {\r\n        return undefined\r\n    }\r\n    return 'Поле обязательно!'\r\n}\r\n\r\nexport const maxLength = (maxLength) => (value) => {\r\n    if (value.length > maxLength) {\r\n        return `Длина свыше ${maxLength} символов!`\r\n    }\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__07Mix\",\"error\":\"FormsControls_error__BSYle\",\"formSummaryError\":\"FormsControls_formSummaryError__GCzur\"};"],"names":["props","className","styles","to","id","name","type","message","maxLengthNum","maxLength","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","htmlFor","Field","component","FormControl","formElement","placeholder","validate","required","values","sendMessage","messageBody","state","dialogsPageData","dialogsList","dialogs","map","dialog","messagesList","messages","compose","connect","dialogsPage","setNewMessage","WithAuthRedirect","DialogsPage","input","meta","hasError","touched","error","React","mapStateToProps","isAuth","auth","Component","RedirectComponent","this","value","length"],"sourceRoot":""}