{"version":3,"file":"static/js/107.5923652b.chunk.js","mappings":"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","sources":["webpack://react-piska/./src/components/Profile/Profile.module.css?b512","webpack://react-piska/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPosts.module.css","webpack://react-piska/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/NewPost.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/common/FormsControls/FormsControls.jsx","hoc/WithAuthRedirect.jsx","utils/validators/validators.jsx","webpack://react-piska/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__b8GdA\"};","// extracted by mini-css-extract-plugin\nexport default {\"about\":\"ProfileInfo_about__v03L3\",\"avatar\":\"ProfileInfo_avatar__r9fqJ\",\"avatar_image\":\"ProfileInfo_avatar_image__q-+du\",\"description\":\"ProfileInfo_description__hmriM\",\"facebook\":\"ProfileInfo_facebook__Oyaro\",\"website\":\"ProfileInfo_website__d2sj7\",\"vk\":\"ProfileInfo_vk__wNdA0\",\"twitter\":\"ProfileInfo_twitter__r0wRo\",\"instagram\":\"ProfileInfo_instagram__yppep\",\"youtube\":\"ProfileInfo_youtube__ZuWlU\",\"github\":\"ProfileInfo_github__RjVxK\",\"mainLink\":\"ProfileInfo_mainLink__3b3ZP\"};","// extracted by mini-css-extract-plugin\nexport default {\"controls\":\"ProfileStatus_controls__nDfV1\"};","import React, {useEffect, useState} from \"react\";\r\nimport styles from './ProfileStatus.module.css'\r\n\r\nconst ProfileStatus = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.profileStatus)\r\n\r\n    const toggleEditMode = () => {\r\n        setEditMode(!editMode)\r\n    }\r\n\r\n    const onUpdateStatus = () => {\r\n        props.updateProfileStatus(status)\r\n        // props.getProfileStatus(props.userId) // НЕ РАБОТАЕТ ЕСЛИ В АДРЕСНОЙ СТРОКЕ НИЧЕГО // кажись уже и не надо\r\n        setEditMode(false)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setStatus(props.profileStatus)\r\n    }, [props.profileStatus])\r\n\r\n    return (\r\n        <>\r\n            {\r\n                editMode &&\r\n                <div>\r\n                    <div>\r\n                        <input\r\n                            // onBlur={toggleEditMode}\r\n                            autoFocus={true}\r\n                            // readOnly={true} // ПОКА ЧТО ЧТОБ НЕ РУГАЛОСЬ\r\n                            type='text'\r\n                            onChange={onStatusChange}\r\n                            value={status}/>\r\n                    </div>\r\n\r\n                    <div className={styles.controls}>\r\n                        <button\r\n                            value='Сохранить'\r\n                            onClick={onUpdateStatus}>\r\n                            Сохранить\r\n                        </button>\r\n                        <button\r\n                            value='Отмена'\r\n                            onClick={toggleEditMode}>\r\n                            Отмена\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            }\r\n            {\r\n                !editMode &&\r\n                <div>\r\n                    <span\r\n                        onClick={toggleEditMode}>\r\n                        {props.profileStatus || 'статуса нет'}\r\n                    </span>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus","import styles from \"./ProfileInfo.module.css\";\r\nimport avatar from '../../../assets/img/user.png'\r\nimport Preloader from \"../../common/Proloader/Preloader\";\r\nimport {Link} from \"react-router-dom\";\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\n\r\nfunction ProfileInfo(props) {\r\n    if (!props.userId) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    let notEmptyContacts = () => {\r\n        let arr = []\r\n\r\n        for (let contact in props.contacts) {\r\n            props.contacts[contact] && arr.push(\r\n                <Link\r\n                    to={props.contacts[contact]}\r\n                    // replace\r\n                    // reloadDocument\r\n                    target='_blank'\r\n                    rel='noreferrer'\r\n                    key={contact}\r\n                    style={{marginRight: '10px'}}\r\n                    className={styles[contact]}\r\n                >\r\n                    {contact}\r\n                </Link>\r\n            )\r\n        }\r\n        return arr\r\n    }\r\n    return (\r\n        <div className={styles.about}>\r\n            <div className={styles.avatar}>\r\n                <img\r\n                    className={styles.avatar_image}\r\n                    src={props.photos?.large || avatar}\r\n                    alt=\"Аватар\"\r\n                />\r\n            </div>\r\n\r\n            <div className={styles.description}>\r\n                <h2>{props.fullName}</h2>\r\n\r\n                <ProfileStatus\r\n                    userId={props.userId}\r\n                    profileStatus={props.profileStatus}\r\n                    getProfileStatus={props.getProfileStatus}\r\n                    updateProfileStatus={props.updateProfileStatus}\r\n                />\r\n\r\n                {props.aboutMe && <p>{props.aboutMe}</p>}\r\n\r\n                {\r\n                    props.lookingForAJob && <p>Ищу работу: {props.lookingForAJobDescription}</p>\r\n                }\r\n\r\n                {\r\n                    Object.keys(props.contacts).length && <div>{notEmptyContacts()}</div>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__k+GpQ\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__7yJPN\"};","import styles from './Post.module.css';\r\n\r\nfunction Post(props) {\r\n    return (\r\n        <div className={styles.item}>\r\n            {props.text}\r\n            <br />\r\n            likes: <span>{props.likes}</span>\r\n            <br />\r\n            qweqweqwe\r\n            qwe\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {maxLength, required} from \"../../../utils/validators/validators\";\r\nimport {FormControl} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLengthNum = maxLength(10)\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={FormControl}\r\n                    formElement='textarea'\r\n\r\n                    name='newPostText'\r\n                    type='textarea'\r\n                    placeholder='Введите текст...'\r\n                    validate={[required, maxLengthNum]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Опубликовать</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({\r\n    form: 'profileAddNewPostForm'\r\n})(AddNewPostForm)\r\n\r\nconst NewPost = (props) => {\r\n    const addNewPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p>Новый пост</p>\r\n            <AddNewPostFormRedux onSubmit={addNewPost} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewPost","import React, {memo} from \"react\";\r\nimport styles from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport NewPost from \"./NewPost\";\r\n\r\nconst MyPosts = memo(props => {\r\n\r\n    let postsElements = [...props.posts]\r\n        .reverse()\r\n        .map(item =>\r\n            <Post text={item.text} likes={item.likes} key={item.id}/>\r\n        )\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <NewPost addPost={props.addPost}/>\r\n\r\n            <hr/>\r\n            <div className={styles.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default MyPosts;\r\n","import styles from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport React from \"react\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={styles.profile}>\r\n            <ProfileInfo\r\n                {...props.profileInfo}\r\n                profileStatus={props.profileStatus}\r\n                getProfileStatus={props.getProfileStatus}\r\n                updateProfileStatus={props.updateProfileStatus}\r\n            />\r\n\r\n            <MyPosts\r\n                addPost={props.addPost}\r\n                posts={props.posts}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    addPost,\r\n    getUserProfile,\r\n    getProfileStatus, updateProfileStatus,\r\n} from \"../../redux/profile-reducer\";\r\nimport Profile from \"./Profile\";\r\nimport {useLocation, useNavigate, useParams} from \"react-router-dom\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.router.params.userId\r\n\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if (!userId) {\r\n                // debugger\r\n                // this.props.router.location({pathname :'/login'})\r\n            }\r\n        }\r\n\r\n        this.props.getUserProfile(userId)\r\n        this.props.getProfileStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profileInfo: state.profilePage.profileInfo,\r\n    posts: state.profilePage.posts,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n\r\n    profileStatus: state.profilePage.profileStatus\r\n})\r\n\r\n// костыль, сейчас делается через хуки\r\n// wrapper to use react router's v6 hooks in class component(to use HOC pattern, like in router v5)\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{location, navigate, params}}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        addPost,\r\n        getUserProfile,\r\n\r\n        getProfileStatus,\r\n        updateProfileStatus\r\n    }),\r\n    // WithAuthRedirect,\r\n    withRouter\r\n)(ProfileContainer)","import React from \"react\";\r\nimport styles from './FormsControls.module.css'\r\n\r\nexport const FormControl = ({input, meta, formElement, ...props}) => {\r\n    let hasError = meta.touched && meta.error\r\n\r\n    return (\r\n    <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n        {React.createElement(formElement, {...input, ...props})}\r\n        {hasError && <p>{meta.error}</p>}\r\n    </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) {\r\n                return <Navigate to={'/login'} />\r\n            }\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}\r\n","export const required = (value) => {\r\n    if (value) {\r\n        return undefined\r\n    }\r\n    return 'Поле обязательно!'\r\n}\r\n\r\nexport const maxLength = (maxLength) => (value) => {\r\n    if (value.length > maxLength) {\r\n        return `Длина свыше ${maxLength} символов!`\r\n    }\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__07Mix\",\"error\":\"FormsControls_error__BSYle\",\"formSummaryError\":\"FormsControls_formSummaryError__GCzur\"};"],"names":["props","useState","editMode","setEditMode","profileStatus","status","setStatus","toggleEditMode","useEffect","autoFocus","type","onChange","e","currentTarget","value","className","styles","onClick","updateProfileStatus","userId","src","photos","large","avatar","alt","fullName","getProfileStatus","aboutMe","lookingForAJob","lookingForAJobDescription","Object","keys","contacts","length","arr","contact","push","to","target","rel","style","marginRight","notEmptyContacts","Preloader","text","likes","maxLengthNum","maxLength","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","FormControl","formElement","name","placeholder","validate","required","values","addPost","newPostText","memo","postsElements","posts","reverse","map","item","id","profileInfo","ProfileContainer","this","router","params","authorizedUserId","getUserProfile","React","compose","connect","state","profilePage","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","input","meta","hasError","touched","error","mapStateToProps","WithAuthRedirect","RedirectComponent"],"sourceRoot":""}